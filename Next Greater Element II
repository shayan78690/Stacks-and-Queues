class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int n = nums.length;
        Stack<Integer> stack = new Stack<>();
        int res[] = new int[n];
        for(int i = 2*n-1; i >= 0; i--) {
            while(!stack.isEmpty() && stack.peek() <= nums[i%n]) {
                stack.pop();
            }

            if(i < n) {
                if(stack.isEmpty()) {
                    res[i%n] = -1;
                } else {
                    res[i%n] = stack.peek();
                }
            }
            stack.push(nums[i%n]);
        }
        return res;
    }
}







class Solution {

    public int[] nextGreaterElements(int[] nums) {
        int n = nums.length;
        int result[] = new int[n];
        for(int i = 0; i < n; i++) {
            result[i] = -1;
        }

        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < i + n; j++) {
                if (nums[i] < nums[j % n]) {
                    result[i] = nums[j % n];
                    break;
                }
            }
        }
        return result;
    }
}
