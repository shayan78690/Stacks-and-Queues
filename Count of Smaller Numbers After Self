class Solution {
    public List<Integer> countSmaller(int[] nums) {
        int n = nums.length;
        int[] result = new int[n];
        int[] index = new int[n];

        for (int i = 0; i < n; i++) {
            index[i] = i;
        }

        mergeSort(nums, index, result, 0, n - 1);

        List<Integer> ans = new ArrayList<>();
        for (int count : result) {
            ans.add(count);
        }

        return ans;
    }

    private void mergeSort(int[] nums, int[] index, int[] result, int left, int right) {
        if (left >= right)
            return;

        int mid = left + (right - left) / 2;

        mergeSort(nums, index, result, left, mid);
        mergeSort(nums, index, result, mid + 1, right);

        merge(nums, index, result, left, mid, right);
    }

    private void merge(int[] nums, int[] index, int[] result, int left, int mid, int right) {
        int[] temp = new int[right - left + 1];
        int[] tempIndex = new int[right - left + 1];
        int i = left, j = mid + 1, k = 0;
        int count = 0;

        while (i <= mid && j <= right) {
            if (nums[index[i]] <= nums[index[j]]) {
                result[index[i]] += count;
                temp[k] = index[i];
                tempIndex[k++] = index[i++];
            } else {
                count++;
                temp[k] = index[j];
                tempIndex[k++] = index[j++];
            }
        }

        while (i <= mid) {
            result[index[i]] += count;
            temp[k] = index[i];
            tempIndex[k++] = index[i++];
        }

        while (j <= right) {
            temp[k] = index[j];
            tempIndex[k++] = index[j++];
        }

        for (i = 0; i < temp.length; i++) {
            index[left + i] = temp[i];
        }
    }
}











class Solution {
    public List<Integer> countSmaller(int[] nums) {
        List<Integer> ans = new ArrayList<>();
        int n = nums.length;
        
        for (int i = 0; i < n; i++) {
            int count = 0;
            for (int j = i + 1; j < n; j++) {
                if (nums[j] < nums[i]) {
                    count++;
                }
            }
            ans.add(count);
        }
        return ans;
    }
}
